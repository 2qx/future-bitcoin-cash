pragma cashscript ^0.10.0;

// Coupon - apply* utxo coupons by spending at least <amount> on <lock>
//
// [Alpha] 2024-05-20
//
// From: Future Bitcoin Cash
//
// Author: 2qx <2qx_in_the_future@small.neomailbox.ch>
//
// Allow anyone to use an unspent output (utxo) in a transaction ...
//
// ... given:
//
// [ ] the zeroth output value exceeds a predefined amount 
// [ ] the zeroth output is to a predefined address
// [ ] the coupon must be applied as the last input
//
// * Limit one per transaction.
//
// Note: this contract is designed to run as part of an integrated
// multi-contract system. It's not in itself sufficient to assure 
// an advisory doesn't claim all coupons instantly for no cost.
//
// ... If there is no time or monetary cost to spend every coupon, 
// it should be expected that they will all be cleaned at once.
//

contract Coupon(

  // Minimum spent (sats) to claim each coupon utxo.
  int amount,
  
  // Destination for the zeroth (constraining) output.
  bytes lock

){

  function apply() {
    
    // assure at the minium amount is sent as the first output
    require(tx.outputs[0].value >= amount);

    // Check that the first output sends to the intended recipient. 
    require(tx.inputs[0].lockingBytecode == lock);
  
    // The coupon must be spent as the last input, 
    //   therefore only coupon may be spent at a time.
    require(this.activeInputIndex+1 == tx.inputs.length);

  }

}
