{"version":3,"file":"11.2VNMI6KM.js","sources":["../../../../../../src/routes/write/+page.ts","../../../../../../src/routes/write/+page.svelte"],"sourcesContent":["import { dev } from '$app/environment';\n\n// we don't need any JS on this page, though we'll load\n// it in dev so that we get hot module replacement\nexport const csr = dev;\n\n// since there's no dynamic data here, we can prerender\n// it so that it gets served as a static asset in production\nexport const prerender = true;\n","<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { Vault } from '@fbch/lib';\n\timport { height } from '$lib/store.js';\n\n\timport { copy } from 'svelte-copy';\n\timport { toast } from '@zerodevx/svelte-toast';\n\n\tconst series = [3, 4, 5, 6];\n\tlet s = 4;\n\tlet coupons = [];\n\tlet copyText = \"\";\n\tlet duplicateCoupons = 1;\n\tlet placement = 1;\n\tlet rate = 20;\n\tlet totalSpend = 0;\n\tlet totalPlacement = 0;\n\tlet heightValue = 857000;\n\n\theight.subscribe((value: any) => {\n\t\theightValue = value;\n\t});\n\n\tfunction getSendToMany(coupons): string {\n\t\tlet str = coupons\n\t\t\t.map((c) => {\n\n\t\t\t\treturn `${c.address}, ${c.amount}`;\n\t\t\t})\n\t\t\t.join('\\r\\n');\n\t\treturn str;\n\t}\n\n\tfunction updateCoupons() {\n\t\tlet addresses = Vault.getCouponSeries(heightValue, placement * 1e8, s, s == 6 ? 4 : undefined);\n\t\tlet times = Vault.getSeriesTimes(heightValue, s, s == 6 ? 4 : undefined);\n\n\t\tcoupons = addresses\n\t\t\t.map(function (a, i) {\n\t\t\t\tif ((times[i] - heightValue) * rate > 543) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...Array(duplicateCoupons).fill({\n\t\t\t\t\t\t\ttime: times[i],\n\t\t\t\t\t\t\taddress: a,\n\t\t\t\t\t\t\tplacement: placement,\n\t\t\t\t\t\t\tamount: Math.floor((times[i] - heightValue) * rate) / 1e8\n\t\t\t\t\t\t})\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t})\n\t\t\t.flat();\n\n\t\tcopyText = getSendToMany(coupons)\n\t\ttotalPlacement = coupons.reduce(function (acc, obj) {\n\t\t\treturn acc + obj.placement;\n\t\t}, 0);\n\n\t\ttotalSpend = coupons.reduce(function (acc, obj) {\n\t\t\treturn acc + obj.amount;\n\t\t}, 0);\n\t\ttotalSpend = Math.floor(totalSpend * 1e8) / 1e8;\n\t}\n\n\tonMount(async () => {\n\t\tupdateCoupons();\n\t});\n</script>\n\n<svelte:head>\n\t<title>Write</title>\n\t<meta name=\"description\" content=\"Write Coupons\" />\n</svelte:head>\n\n<div class=\"text-column\">\n\t<h1>Let's write some coupons!</h1>\n\t<blockquote>\n\t\t<b>This is an advanced feature for power users. There is no way to undo writing a coupon.</b>\n\t</blockquote>\n\t<p>\n\t\tCoupons incentivize money being spent 1) at a specific destination, 2) above some minimum\n\t\tamount, and 3) with restrictions like: limit one per customer.\n\t</p>\n\t<p>\n\t\tFuture vault coupons are plain bitcoin cash unspent transaction outputs (UTXOs) that have been\n\t\tsent to, and are then locked by a <a href=\"/contracts#coupon\">simple contract</a> to incentivize\n\t\tspending money at a specific destination (a FBCH token vault). For example, an output of 100k sats\n\t\tcan be sent to a coupon contract to be used for locking at least 1 BCH (min. value) into 1 FBCH at\n\t\ta vault contract (destination).\n\t</p>\n\t<p>\n\t\tCoupons values are denoted in BCH sats, where the value of the coupon is the value of the\n\t\tunspent output. A whole BCH could be split into 1000 coupons each offering 100k sats for\n\t\tplacement, or 1 BCH coin could be sent to the coupon contract in one single output to let anyone\n\t\tlock a \"free\" FBCH.\n\t</p>\n\t<p>\n\t\tAt this time, all coupons incentivize the same placement amount of 1 BCH (or 100M sats) into an\n\t\tFBCH vault. These \"C<sub>0</sub>\" series coupons are to lock 1 x 10^0 BCH, but there may be\n\t\tsmaller and larger amounts later (i.e C<sub>2</sub> for 100 BCH placements and C<sub>-2</sub> for\n\t\t0.01 BCH vault placements).\n\t</p>\n\t<p>\n\t\t<b>Coupons are not refundable.</b>\n\t\tMoney sent to a coupon holding contract can only be redeemed in a transaction that sends the required\n\t\tamount of value to a second predefined contract (i.e. a future vault).\n\t</p>\n\t<p>\n\t\tBelow is a simple tool for use with the <a href=\"https://electroncash.org/\">Electron Cash</a> pay-to-many\n\t\tfeature:\n\t</p>\n\n\t<div id=\"control\">\n\t\t<div>Placement: 1 BCH</div>\n\t\t<div>\n\t\t\t<label>\n\t\t\t\tRate: {rate} spb , <i>~{(rate / 20.0).toPrecision(2)}% </i><br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\ton:change={() => updateCoupons()}\n\t\t\t\t\tbind:value={rate}\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tstep=\"0.2\"\n\t\t\t\t\tmax=\"100\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</div>\n\t\t<div>\n\t\t\t<label>\n\t\t\t\tCopies: {duplicateCoupons}<br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\ton:change={() => updateCoupons()}\n\t\t\t\t\tbind:value={duplicateCoupons}\n\t\t\t\t\tmin=\"1\"\n\t\t\t\t\tmax=\"40\"\n\t\t\t\t/>\n\t\t\t</label>\n\t\t</div>\n\n\t\t<div id=\"dataTable\">\n\t\t\t{#each series as number}\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\tname=\"s\"\n\t\t\t\t\t\tvalue={number}\n\t\t\t\t\t\tbind:group={s}\n\t\t\t\t\t\ton:change={() => updateCoupons()}\n\t\t\t\t\t/>\n\t\t\t\t\tV{number} Series - {Math.pow(10, number).toLocaleString()} <br />\n\t\t\t\t</label>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n\n\t<div>\n\t\tLock up to {totalPlacement} FBCH\n\t</div>\n\t<div id=\"total\">\n\t\tTotal: {totalSpend} BCH<br />\n\t</div>\n\t<hr />\n\n\t<div\n\t\tid=\"mono\"\n\t\tuse:copy={copyText}\n\t\ton:svelte-copy={(event) => toast.push('Coupons copied to clipboard')}\n\t\ton:svelte-copy:error={(event) =>\n\t\t\ttoast.push(`Error, no access to clipboard?: ${event.detail.message}`, {\n\t\t\t\tclasses: ['warn']\n\t\t\t})}\n\t>\n\t\t{#each coupons as c}\n\t\t\t{c.address}, {c.amount}<br />\n\t\t{/each}\n\t</div>\n</div>\n\n<style>\n\t#control {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t}\n\t#control div {\n\t\tflex: 1 0 50%;\n\t\tborder: 1px solid black;\n\t\tpadding: 0.2em;\n\t}\n\t#mono {\n\t\tfont-family: monospace;\n\t\tword-break: break-all;\n\t}\n\t#dataTable {\n\t\tmax-width: fit-content;\n\t}\n\t#total {\n\t\ttext-align: right;\n\t}\n</style>\n"],"names":["csr","dev","prerender","ctx","t3_value","insert_hydration","target","label","anchor","append_hydration","input","br","t0_value","t2_value","dirty","set_data","t0","t2","t34_value","i","meta","div8","h1","blockquote","p0","p1","p2","p3","p4","p5","div4","div0","div1","label0","br0","input0","div2","label1","br1","input1","div3","div5","div6","br2","hr","div7","t34","placement","getSendToMany","coupons","c","series","s","copyText","duplicateCoupons","rate","totalSpend","totalPlacement","heightValue","height","value","updateCoupons","addresses","Vault","times","$$invalidate","a","acc","obj","onMount","to_number","event","toast"],"mappings":"uhBAIO,MAAMA,GAAMC,GAINC,GAAY,kQC+IlBC,EAAM,EAAA,EAAA,OAAYC,EAAA,KAAK,IAAI,GAAID,OAAQ,eAAc,EAAA,0EADtD;AAAA,OACA,aAAQ,YAAU,kHADlB;AAAA,OACA,iBAAQ,YAAU,iHAJXA,EAAM,EAAA,iCAJfE,EASOC,EAAAC,EAAAC,CAAA,EARNC,EAMCF,EAAAG,CAAA,wBAFYP,EAAC,CAAA,qCAG6CM,EAAKF,EAAAI,CAAA,mGAHnDR,EAAC,CAAA,mDA2Bf,IAAAS,EAAAT,MAAE,QAAO,OAAIU,EAAAV,MAAE,OAAM,6BAAX,IAAE,wCAAF,IAAE,6DAAUE,EAAKC,EAAAK,EAAAH,CAAA,UAA3BM,EAAA,GAAAF,KAAAA,EAAAT,MAAE,QAAO,KAAAY,EAAAC,EAAAJ,CAAA,EAAIE,EAAA,GAAAD,KAAAA,EAAAV,MAAE,OAAM,KAAAY,EAAAE,EAAAJ,CAAA;;;;;;;;;;;;;;+DA1DIK,IAAAf,EAAO,CAAA,EAAA,IAAM,YAAY,CAAC,EAAA,qGAyB7CA,EAAM,CAAA,CAAA,wBAAX,OAAIgB,GAAA,gCAgCAhB,EAAO,CAAA,CAAA,wBAAZ,OAAIgB,GAAA,yYA1DC,QACC,OAAChB,EAAI,CAAA,CAAA,OAAC,SAAO,gBAAG,GAAC,gBAA8B,IAAE,sEAYlD,UACG,OAACA,EAAgB,CAAA,CAAA,+GA2BxB,aACQ,OAACA,EAAc,CAAA,CAAA,OAAC,OAC5B,yBACe,SACP,OAACA,EAAU,CAAA,CAAA,OAAC,MAAI,glCA7ChB,QACC,SAACA,EAAI,CAAA,CAAA,SAAC,SAAO,oCAAG,GAAC,sBAA8B,IAAE,uMAYlD,UACG,UAACA,EAAgB,CAAA,CAAA,gQA2BxB,aACQ,UAACA,EAAc,CAAA,CAAA,UAAC,OAC5B,0EACe,SACP,UAACA,EAAU,CAAA,CAAA,UAAC,MAAI,isBAzFxBM,EAAkD,SAAA,KAAAW,CAAA,WAGnDf,EAuGKC,EAAAe,EAAAb,CAAA,EAtGJC,EAAiCY,EAAAC,CAAA,SACjCb,EAEYY,EAAAE,CAAA,SACZd,EAGGY,EAAAG,CAAA,SACHf,EAMGY,EAAAI,CAAA,SACHhB,EAKGY,EAAAK,CAAA,UACHjB,EAKGY,EAAAM,CAAA,UACHlB,EAIGY,EAAAO,CAAA,SACHnB,EAGGY,EAAAQ,CAAA,UAEHpB,EA0CKY,EAAAS,CAAA,EAzCJrB,EAA0BqB,EAAAC,CAAA,UAC1BtB,EAYKqB,EAAAE,EAAA,EAXJvB,EAUOuB,GAAAC,CAAA,0BATaxB,EAAwCwB,EAAAd,CAAA,0BAAAV,EAAKwB,EAAAC,EAAA,UAChEzB,EAOCwB,EAAAE,CAAA,OAJYhC,EAAI,CAAA,CAAA,UAOnBM,EAWKqB,EAAAM,EAAA,EAVJ3B,EASO2B,GAAAC,CAAA,kBARoB5B,EAAK4B,EAAAC,EAAA,UAC/B7B,EAMC4B,EAAAE,CAAA,OAHYpC,EAAgB,CAAA,CAAA,UAO/BM,EAaKqB,EAAAU,CAAA,2DAGN/B,EAEKY,EAAAoB,CAAA,kCACLhC,EAEKY,EAAAqB,CAAA,0BADmBjC,EAAKiC,EAAAC,EAAA,UAE7BlC,EAAKY,EAAAuB,EAAA,UAELnC,EAYKY,EAAAwB,CAAA,sMAVM1C,EAAQ,CAAA,CAAA,CAAA,0FAlDTA,EAAI,CAAA,CAAA,EAAcW,EAAA,IAAAI,MAAAA,IAAAf,EAAO,CAAA,EAAA,IAAM,YAAY,CAAC,EAAA,KAAAY,EAAA+B,GAAA5B,EAAA,aAItCf,EAAI,CAAA,CAAA,YASRA,EAAgB,CAAA,CAAA,YAIZA,EAAgB,CAAA,CAAA,eAQvBA,EAAM,CAAA,CAAA,qBAAX,OAAIgB,GAAA,EAAA,qHAAJ,qBAgBShB,EAAc,CAAA,CAAA,aAGlBA,EAAU,CAAA,CAAA,aAaXA,EAAO,CAAA,CAAA,qBAAZ,OAAIgB,GAAA,EAAA,qHAAJ,mDAPQhB,EAAQ,CAAA,CAAA,qEA1Jf,IAAA4C,GAAY,EAUP,SAAAC,GAAcC,EAAO,QACnBA,EACR,IAAKC,GAEK,GAAAA,EAAE,OAAO,KAAKA,EAAE,MAAM,EAEhC,EAAA,KAAK;AAAA,CAAM,qBArBR,MAAAC,GAAU,EAAG,EAAG,EAAG,CAAC,EACtB,IAAAC,EAAI,EACJH,EAAO,CAAA,EACPI,EAAW,GACXC,EAAmB,EAEnBC,EAAO,GACPC,EAAa,EACbC,EAAiB,EACjBC,EAAc,MAElBC,GAAO,UAAWC,GAAU,CAC3BF,EAAcE,aAaNC,GAAa,CACjB,IAAAC,EAAYC,GAAM,gBAAgBL,EAAaX,GAAY,IAAKK,EAAGA,GAAK,EAAI,EAAI,MAAS,EACzFY,GAAQD,GAAM,eAAeL,EAAaN,EAAGA,GAAK,EAAI,EAAI,MAAS,EAEvEa,EAAA,EAAAhB,EAAUa,EACR,IAAc,SAAAI,EAAG/C,EAAC,CACb,OAAA6C,GAAM7C,CAAC,EAAIuC,GAAeH,EAAO,QAEjC,MAAMD,CAAgB,EAAE,KAAI,CAC9B,KAAMU,GAAM7C,CAAC,EACb,QAAS+C,EACE,UAAAnB,GACX,OAAQ,KAAK,OAAOiB,GAAM7C,CAAC,EAAIuC,GAAeH,CAAI,EAAI,YAOzD,KAAI,CAAA,MAENF,EAAWL,GAAcC,CAAO,CAAA,MAChCQ,EAAiBR,EAAQ,OAAiB,SAAAkB,EAAKC,EAAG,QAC1CD,EAAMC,EAAI,WACf,QAEHZ,EAAaP,EAAQ,OAAiB,SAAAkB,EAAKC,EAAG,QACtCD,EAAMC,EAAI,QACf,QACHZ,EAAa,KAAK,MAAMA,EAAa,GAAG,EAAI,GAAG,EAGhDa,GAAO,SAAA,CACNR,yBAsDoBA,iBACLN,EAAIe,GAAA,KAAA,KAAA,qBAYCT,kBACLP,EAAgBgB,GAAA,KAAA,KAAA,uBAcflB,EAAC,KAAA,0DACIS,IAmBJU,GAAUC,GAAM,KAAK,6BAA6B,EAC5CD,GACtBC,GAAM,KAAwC,mCAAAD,EAAM,OAAO,OAAO,GACjE,CAAA,SAAU,MAAM,CAAA,CAAA"}