import{$ as S,e as I,M as R,w as A}from"./SvelteToast.svelte_svelte_type_style_lang.DE3h4bHZ.js";const Y=new Map([["16dac7ae826ad3913db3b1f0c1db567e3086a7591334c0fd3667ab13e51ae831",858e3],["0cc1cb6033617c83ba69e158398f7d3097ee9fc538f52075a3a2df0af206b819",859e3],["ca323c19cf6fc269822c6bfdda13f5c062c67bc3a20dbe73d87c43e1b2baca95",86e4],["a42742e4188780dbdc6017016e2d49803eedfe0881805d2b19bc0e93fcae96ee",861e3],["bdaaf2610c0a4ae34c0d7432f39aaaa4b5467d2f8e5255018ea073e1a558a678",862e3],["89a2430a98bb92b504d6d23182d4b0d3c9455b4d9e9671aeae4b09208f1df584",863e3],["7face04783f30345a6d48cd7747a7cabf92b6c0523f2e021c238573c691f2438",864e3],["09dabc81889bd7d1301f7e0620301460bcc0f754ab9b9838b881b72182b1d502",865e3],["b2a37403c5d97bf6c2e1338c054b6d73eef1543137cea85b6ab9eaeff5a43087",866e3],["30d336f109876e8a66a6da63ac52c807e85e2bba00204f1b010ef9cd42fd98b7",867e3],["28afff19a58a8ad529aa5631bc3576e9ab19675e541b28963b61e53055e77942",868e3],["357ce1027d7f07f6c0c8bb79ccd2e0f2d44e9f2e91a754befc66380cdbaa6449",869e3],["d861cd6420db1e280764b846bac790cc86c1e7ea93adecb2d1c9b4289eeaa1a8",87e4],["08cd919b34a789bc07a37c6c68e9d15f105a36010fcb8a8bd017190fff84a6b8",871e3],["f55d2e61aadc9519d1c0a346cbbc7766a5e871660a3c25b61eb517be200f901c",872e3],["e9c7dca6f33c7c963bbbb7f72e85d5181d76ad9eb26d8ac7e0765921e6bc7248",873e3],["a0055c80f357a2e14b203274cbe0f211bd25ad4032deab59dba1187397a23a0f",874e3],["3c1136e10ba3a3852f1ab3d1bff1727c3b9c7782a8cb84fba5706ffaccfae24c",875e3],["cdbc9154e80320895be94b616624ea967e6121879476dd285470a297e0f94e6c",876e3],["5c88fbc5e0a8e828050bf83b3ebfc9b8d151c77079b4079e4f620588c2989ac1",877e3],["53047c3ecccf16318a8a49376213e7695b81392c18a9a88ade84157ef3c4b793",878e3],["b49acab285c26cfeac6cd8c3deabf8a04ed9eefd522ce5559342e526a3b35cc9",879e3],["812006db91178d966c52207b32b46b337e5a6c1c87196e1af36834606205a2bb",88e4],["31225667a83a30779e44dbb19f4251820ee4e00b13c3b5ae8d00bca2351c3981",881e3],["5891be47b3b87d848678462eb65f82c3bd2e450693d5f5a6ab5b16ac3b6d8bd2",882e3],["dde1e93679e85d7c894285fc4cb95a5e717918f56ff405d9a740f2be82a301cb",883e3],["68931d718e1482c0d1a4ff73daa4cd7e6a1e22ca9e66d552bcb21ae861737115",884e3],["019fbdca8662a1f6b617e3385c1dd903cde128d5d2d0b270015baacff1949ec0",885e3],["a4d1892a9a2319c7e23933f98a926b00877556162ca64a3668182d9a388c8d27",886e3],["e337b4468fd9a737968cd82b09dfd91884220134994949f9e8c1dc70c3471f5b",887e3],["8385c083c569dcceb6dff0d08b950d35822c4ccd5fa40084071346df677550b4",888e3],["55727d2dee32dca41f4d31434c28b2324b8d1e06ff26282ff451ea5329f0e153",889e3],["988fd2522d329f6fc079929e86baadf9e636763b5351296d18aa199b13b4493d",89e4],["5ec2629236f62393d1d3da47c764553aa7057a83ee60383225d1397573bd9f9f",891e3],["336a642ace9290d91a1189b576236d9c8c7fffa01eea388a8b3bb635c94a6cc3",892e3],["edbbb22cda1b04ffa4741c51f35d506002d4dc5b9a36c9cb3aa3fe578303af3f",893e3],["3753b96d4a6d246c72fe5469e4e79361af59186168ffa26b89f29cf037fc0e3f",894e3],["ca95807958352f83fec68c5e0bc7ca30e211a7bdeb1801eac4573e9cbc0730a8",895e3],["30834fbca4bbd8e2bd5c4754395a21b2af24e7759cbc882a9df4dab1e953411a",896e3],["78687328f1f07a5a58d9d1e70b30cbb854205520e9e1787b2460b0222f3623ff",897e3],["8b97fc83485dd45ae2122f163de5897eafcdec81dbf779e4153548e24bd556ed",898e3],["5f1abc1bf36ea45291c0d303f9a63b5c8632687e6b1b224beb3b311fa0685812",899e3],["4575d242087a5e8a574be521ff8eef4ac1a7ee9a012834821a1272503e2e880a",9e5],["9c5f32f489b49f56ebe172d5f1a2f9f0ad467d8f05c3af42d9baa1778c04598c",901e3],["ca17a6b04e5217db5783a96ff8501c37977ef6f54ad67a7496efe9105b34d897",902e3],["9e405b79a5784a1b4179dba017ea01fa77c5d0b050d0852983ec2a00f88c870b",903e3],["645d0dbc137e0cfaacd8412b62884f55a0de158ef0e504b3df4058b29caf8786",904e3],["bae12c5a0b11e9f85e2d1d1d07b0d1a1edf3dba0fa36e48cf73f48a69709240c",905e3],["448c2a2f5f871d654c7263f315a7bfb875e12f2a39b78decd35d03273acb23bf",906e3],["7d28d82f8899bb1739dc2645bebf50b7c5e18c92eb6838b42aea02920d8c4cb8",907e3],["567cca6bfeef85f1958bd11c022c9e41a8fa5a0d2a26e5e1405b1e70805e480d",908e3],["cda41febe6abe5bd56be403792a357d5adfcfe129d960833d157db50175ea493",909e3],["7d83793c073bf83162a1d710fe973bfa040cefedd699dca2a6a96243ecc45ef4",91e4],["13117fb7ee0827bbf577772515643dd8052a71981e6f6c4d9001ded23f214fa3",92e4],["bb85461930db00680ad4e93876f87463e351a9686d98448a7cb8e9d9500a2dcb",93e4],["f05609733ca9699b72bb17ef4dfb9bcd78603d57a2d8ec2879f2bfae1262709e",94e4],["14a5b06bf5203ce053a7e4101176135d09591956d488c96cf585e813ba9a2026",95e4],["29db350a88f66124229824e75b753432551f59b972b0175eb7d71e528b9073cb",1e6],["889cc584b5eea00c13e48258199f066bbeb0e88b6ce65519fe2312f4cf37b40d",11e5],["d9d7b5d6d71a5fefaba74a25deffff74454064bbd08ddd24f3619b1d27ceff91",12e5],["fbc3b05d84ae0972ab3a2028d8980f3a597ab89fe075c1bd6129f3c890d67b0f",13e5],["e2170fd75867a4d0b8df24204aea8aebb33a7d699e058a6ab42f0254bca9026b",14e5],["e9057952ded4aad0480169d390906ac619e0d6e31614534f1dcb954e222524f1",15e5],["08a24b2ca498845e4929a017614252ec674f48641b2119b1ae8411deb424bdf6",16e5],["b9fb0b7e67bb69cb4b634ddc0efe4b578eda4fc48c870b2ce398d850bf4a28da",17e5],["3cf5fec8745e0dd77c5b622699d95fe9c9955583e1d97974045958a9406f6256",18e5],["edad1c825338554b83e562aab2c2b220569033a2ccbd970975f3ddda320b70e1",2e6],["03882c71eb1eced84a39fd392df210bb175e6a109bd0c918444b93b67ea8854a",3e6],["5e296fd6ce4c63996094f4ddb22441867411a6bcbb732430ad4f4cc6b4fb3480",4e6]]);async function q(c){if("clipboard"in navigator)await navigator.clipboard.writeText(c);else{const e=document.createElement("input");e.type="text",e.disabled=!0,e.style.setProperty("position","fixed"),e.style.setProperty("z-index","-100"),e.style.setProperty("pointer-events","none"),e.style.setProperty("opacity","0"),e.value=c,document.body.appendChild(e),e.click(),e.select(),document.execCommand("copy"),document.body.removeChild(e)}}const j=(c,e)=>{async function t(){if(s)try{await q(s),c.dispatchEvent(new CustomEvent("svelte-copy",{detail:s}))}catch(n){c.dispatchEvent(new CustomEvent("svelte-copy:error",{detail:n}))}}let i=typeof e=="string"?["click"]:[e.events].flat(1),s=typeof e=="string"?e:e.text;return i.forEach(n=>{c.addEventListener(n,t,!0)}),{update:n=>{const r=typeof n=="string"?["click"]:[n.events].flat(1),h=typeof n=="string"?n:n.text,a=r.filter(f=>!i.includes(f)),l=i.filter(f=>!r.includes(f));a.forEach(f=>{c.addEventListener(f,t,!0)}),l.forEach(f=>{c.removeEventListener(f,t,!0)}),i=r,s=h},destroy:()=>{i.forEach(n=>{c.removeEventListener(n,t,!0)})}}};function v(c,e,t,i){Object.defineProperty(c,e,{get:t,set:i,enumerable:!0,configurable:!0})}const $={client:S("electrum-cash:client "),cluster:S("electrum-cash:cluster"),errors:S("electrum-cash:error  "),warning:S("electrum-cash:warning"),network:S("electrum-cash:network"),ping:S("electrum-cash:pulses ")};$.client.color="2";$.cluster.color="3";$.errors.color="9";$.warning.color="13";$.network.color="4";$.ping.color="8";var o=$;class M{static buildRequestObject(e,t,i){return JSON.stringify({method:e,params:t,id:i})}static get versionRegexp(){return/^\d+(\.\d+)+$/}static get statementDelimiter(){return`
`}}var w=M,L={};v(L,"isVersionRejected",()=>O);v(L,"isVersionNegotiated",()=>_);const O=function(c){return"error"in c},_=function(c){return"software"in c&&"protocol"in c};var P={};v(P,"ElectrumTransport",()=>p);v(P,"DefaultParameters",()=>b);var N={};v(N,"ClusterOrder",()=>T);v(N,"ClusterDistribution",()=>C);v(N,"ClusterStatus",()=>u);v(N,"ClientState",()=>m);v(N,"ConnectionStatus",()=>d);var T;(function(c){c[c.RANDOM=0]="RANDOM",c[c.PRIORITY=1]="PRIORITY"})(T||(T={}));var C;(function(c){c[c.ALL=0]="ALL"})(C||(C={}));var u;(function(c){c[c.DISABLED=0]="DISABLED",c[c.DEGRADED=1]="DEGRADED",c[c.READY=2]="READY"})(u||(u={}));var m;(function(c){c[c.UNAVAILABLE=0]="UNAVAILABLE",c[c.AVAILABLE=1]="AVAILABLE"})(m||(m={}));var d;(function(c){c[c.DISCONNECTED=0]="DISCONNECTED",c[c.CONNECTED=1]="CONNECTED",c[c.DISCONNECTING=2]="DISCONNECTING",c[c.CONNECTING=3]="CONNECTING",c[c.RECONNECTING=4]="RECONNECTING"})(d||(d={}));const p={TCP:{Port:50001,Scheme:"tcp"},TCP_TLS:{Port:50002,Scheme:"tcp_tls"},WS:{Port:50003,Scheme:"ws"},WSS:{Port:50004,Scheme:"wss"}},b={PORT:p.TCP_TLS.Port,TRANSPORT_SCHEME:p.TCP_TLS.Scheme,RECONNECT:15e3,TIMEOUT:12e4,PING_INTERVAL:3e3,CLUSTER_CONFIDENCE:1,CLUSTER_DISTRIBUTION:C.ALL,CLUSTER_ORDER:T.RANDOM};class U extends I.EventEmitter{connect(e,t,i,s){if(this.tcpSocket||this.webSocket)throw new Error("Cannot initiate a new socket connection when an existing connection exists");this.timers.disconnect=setTimeout(()=>this.disconnectOnTimeout(e,t,s),s),this.once("connect",this.clearDisconnectTimerOnTimeout);const n={[p.TCP.Scheme]:"a TCP Socket",[p.TCP_TLS.Scheme]:"an encrypted TCP socket",[p.WS.Scheme]:"a WebSocket",[p.WSS.Scheme]:"an encrypted WebSocket"};if(o.network(`Initiating ${n[i]} connection to '${e}:${t}'.`),i===p.TCP.Scheme||i===p.TCP_TLS.Scheme){if(i===p.TCP_TLS.Scheme){const r={rejectUnauthorized:!1};$4QiMX$isIP(e)||(r.serverName=e),this.tcpSocket=$4QiMX$connect(t,e,r),this.tcpSocket.once("secureConnect",()=>{if(!(this.tcpSocket instanceof $4QiMX$TLSSocket))return;this.tcpSocket.authorizationError==="DEPTH_ZERO_SELF_SIGNED_CERT"&&o.warning(`Connection to ${e}:${t} uses a self-signed certificate`)}),this.tcpSocket.on("secureConnect",this.onConnect.bind(this,n[i],e,t))}else this.tcpSocket=$4QiMX$connect1({host:e,port:t}),this.tcpSocket.on("connect",this.onConnect.bind(this,n[i],e,t));this.tcpSocket.setEncoding("utf8"),this.tcpSocket.setKeepAlive(!0,0),this.tcpSocket.setNoDelay(!0),this.tcpSocket.on("error",this.eventForwarders.tcpError)}else if(i===p.WS.Scheme||i===p.WSS.Scheme)i===p.WSS.Scheme?this.webSocket=new A(`wss://${e}:${t}`):this.webSocket=new A(`ws://${e}:${t}`),this.webSocket.addEventListener("open",this.onConnect.bind(this,n[i],e,t)),this.webSocket.addEventListener("error",this.eventForwarders.wsError);else throw new Error("Incorrect transport specified")}onConnect(e,t,i){this.onConnectHasRun||(o.network(`Established ${e} connection with '${t}:${i}'.`),typeof this.tcpSocket<"u"?(this.tcpSocket.addListener("close",this.eventForwarders.disconnect),this.tcpSocket.addListener("data",this.eventForwarders.tcpData)):typeof this.webSocket<"u"&&(this.webSocket.addEventListener("close",this.eventForwarders.disconnect),this.webSocket.addEventListener("message",this.eventForwarders.wsData)),this.onConnectHasRun=!0,this.emit("connect"))}clearDisconnectTimerOnTimeout(){this.timers.disconnect&&clearTimeout(this.timers.disconnect)}disconnect(){if(this.clearDisconnectTimerOnTimeout(),this.tcpSocket)this.tcpSocket.removeListener("close",this.eventForwarders.disconnect),this.tcpSocket.removeListener("data",this.eventForwarders.tcpData),this.tcpSocket.removeListener("error",this.eventForwarders.tcpError),this.tcpSocket.destroy(),this.tcpSocket=void 0;else if(this.webSocket)try{this.webSocket.removeEventListener("close",this.eventForwarders.disconnect),this.webSocket.removeEventListener("message",this.eventForwarders.wsData),this.webSocket.removeEventListener("error",this.eventForwarders.wsError),this.webSocket.close()}catch{}finally{this.webSocket=void 0}this.onConnectHasRun=!1,this.emit("disconnect")}write(e,t){if(this.tcpSocket)return this.tcpSocket.write(e,t);if(this.webSocket)return this.webSocket.send(e,t),!0;throw new Error("Cannot write to socket when there is no active connection")}disconnectOnTimeout(e,t,i){this.removeListener("connect",this.clearDisconnectTimerOnTimeout);const s={code:"ETIMEDOUT",message:`Connection to '${e}:${t}' timed out after ${i} milliseconds`};this.emit("error",s),this.disconnect()}constructor(...e){super(...e),this.timers={},this.onConnectHasRun=!1,this.eventForwarders={disconnect:()=>this.emit("disconnect"),tcpData:t=>this.emit("data",t),wsData:t=>this.emit("data",`${t.data}
`),tcpError:t=>this.emit("error",t),wsError:t=>this.emit("error",t.error)}}}var B=U;class F extends I.EventEmitter{constructor(e,t,i,s=b.PORT,n=b.TRANSPORT_SCHEME,r=b.TIMEOUT,h=b.PING_INTERVAL,a=b.RECONNECT){if(super(),this.application=e,this.version=t,this.host=i,this.port=s,this.scheme=n,this.timeout=r,this.pingInterval=h,this.reconnectInterval=a,this.timers={},this.verifications=[],this.status=d.DISCONNECTED,this.messageBuffer="",!w.versionRegexp.test(t))throw new Error(`Provided version string (${t}) is not a valid protocol version number.`);this.createSocket(),typeof document<"u"&&document.addEventListener("visibilitychange",this.handleVisibilityChange.bind(this))}get hostIdentifier(){return`${this.host}:${this.port}`}createSocket(){this.socket=new B,this.socket.on("connect",this.onSocketConnect.bind(this)),this.socket.on("disconnect",this.onSocketDisconnect.bind(this)),this.socket.on("data",this.parseMessageChunk.bind(this))}destroySocket(){this.socket.disconnect()}parseMessageChunk(e){for(this.lastReceivedTimestamp=Date.now(),this.verifications.forEach(t=>clearTimeout(t)),this.verifications.length=0,this.messageBuffer+=e;this.messageBuffer.includes(w.statementDelimiter);){const t=this.messageBuffer.split(w.statementDelimiter);for(;t.length>1;){const i=String(t.shift());let s=JSON.parse(i);for(Array.isArray(s)||(s=[s]);s.length>0;){const n=s.shift();if(n.id==="versionNegotiation"){n.error?this.emit("version",{error:n.error}):this.emit("version",{software:n.result[0],protocol:n.result[1]});continue}n.id!=="keepAlive"&&this.emit("statement",n)}}this.messageBuffer=t.shift()||""}}ping(){o.ping(`Sending keep-alive ping to '${this.hostIdentifier}'`);const e=w.buildRequestObject("server.ping",[],"keepAlive");return this.send(e)}async connect(){if(this.status===d.CONNECTED)return;this.status=d.CONNECTING;const e=(t,i)=>{const s=r=>{this.status=d.DISCONNECTED,i(r)};this.socket.removeAllListeners("error"),this.socket.once("error",s);const n=()=>{o.network(`Requesting protocol version ${this.version} with '${this.hostIdentifier}'.`),this.socket.removeListener("error",s);const r=w.buildRequestObject("server.version",[this.application,this.version],"versionNegotiation"),h=a=>{if(O(a)){this.disconnect(!0);const l="unsupported protocol version.";o.errors(`Failed to connect with ${this.hostIdentifier} due to ${l}`),i(l)}else if(a.protocol!==this.version&&`${a.protocol}.0`!==this.version&&`${a.protocol}.0.0`!==this.version){this.disconnect(!0);const l=`incompatible protocol version negotiated (${a.protocol} !== ${this.version}).`;o.errors(`Failed to connect with ${this.hostIdentifier} due to ${l}`),i(l)}else o.network(`Negotiated protocol version ${a.protocol} with '${this.hostIdentifier}', powered by ${a.software}.`),this.status=d.CONNECTED,this.emit("connect"),t()};this.once("version",h),this.send(r)};this.socket.once("connect",n),this.socket.on("error",this.onSocketError.bind(this)),this.socket.connect(this.host,this.port,this.scheme,this.timeout)};await new Promise(e)}async reconnect(){await this.clearReconnectTimer(),o.network(`Trying to reconnect to '${this.hostIdentifier}'..`),this.status=d.RECONNECTING,this.destroySocket(),this.createSocket();try{await this.connect()}catch{}}clearReconnectTimer(){this.timers.reconnect&&clearTimeout(this.timers.reconnect),this.timers.reconnect=void 0}clearKeepAliveTimer(){this.timers.keepAlive&&clearTimeout(this.timers.keepAlive),this.timers.keepAlive=void 0}setupKeepAliveTimer(){this.timers.keepAlive||(this.timers.keepAlive=setTimeout(this.ping.bind(this),this.pingInterval))}async disconnect(e=!1,t=!0){if(this.status===d.DISCONNECTED&&!e)return!1;t&&(this.status=d.DISCONNECTING),await this.clearKeepAliveTimer(),await this.clearReconnectTimer();const i=s=>{this.once("disconnect",()=>s(!0)),this.destroySocket()};return new Promise(i)}async handleVisibilityChange(){document.visibilityState==="hidden"&&this.disconnect(!0,!1),document.visibilityState==="visible"&&this.reconnect()}send(e){this.clearKeepAliveTimer();const t=Date.now(),i=setTimeout(this.verifySend.bind(this,t),this.timeout);return this.verifications.push(i),this.setupKeepAliveTimer(),this.socket.write(e+w.statementDelimiter)}verifySend(e){if(Number(this.lastReceivedTimestamp)<e){if(this.status===d.DISCONNECTED||this.status===d.DISCONNECTING){o.errors(`Tried to verify already disconnected connection to '${this.hostIdentifier}'`);return}this.clearKeepAliveTimer(),o.network(`Connection to '${this.hostIdentifier}' timed out.`),this.socket.disconnect()}}onSocketConnect(){this.clearReconnectTimer(),this.lastReceivedTimestamp=Date.now(),this.setupKeepAliveTimer(),this.socket.removeAllListeners("error"),this.socket.on("error",this.onSocketError.bind(this))}onSocketDisconnect(){this.emit("disconnect"),this.clearKeepAliveTimer(),this.status===d.DISCONNECTING?(this.clearReconnectTimer(),this.removeAllListeners(),this.status=d.DISCONNECTED,o.network(`Disconnected from '${this.hostIdentifier}'.`)):(this.status===d.CONNECTED&&o.errors(`Connection with '${this.hostIdentifier}' was closed, trying to reconnect in ${this.reconnectInterval/1e3} seconds.`),this.status=d.DISCONNECTED,this.timers.reconnect||(this.timers.reconnect=setTimeout(this.reconnect.bind(this),this.reconnectInterval)))}onSocketError(e){if(!(typeof e>"u")){if(e.code==="EAI_AGAIN"){o.errors(`Failed to look up DNS records for '${this.host}'.`);return}if(e.code==="ETIMEDOUT"){o.errors(e.message);return}o.errors(`Unknown network error ('${this.hostIdentifier}'): `,e)}}}var G=F;const V=function(c){return"id"in c&&"error"in c},W=function(c){return!("id"in c)&&"method"in c};class z extends I.EventEmitter{constructor(e,t,i,s=b.PORT,n=b.TRANSPORT_SCHEME,r=b.TIMEOUT,h=b.PING_INTERVAL,a=b.RECONNECT){super(),this.subscriptionMethods={},this.requestId=0,this.requestResolvers={},this.connectionLock=new R,this.connection=new G(e,t,i,s,n,r,h,a)}async connect(){const e=await this.connectionLock.acquire();try{if(this.connection.status===d.CONNECTED)return;this.connection.on("statement",this.response.bind(this)),this.connection.on("connect",this.resubscribeOnConnect.bind(this)),this.connection.on("connect",this.emit.bind(this,"connected")),this.connection.on("disconnect",this.onConnectionDisconnect.bind(this)),this.connection.on("error",this.emit.bind(this,"error")),await this.connection.connect()}finally{e()}}async disconnect(e=!1,t=!1){const i=await this.connectionLock.acquire();try{t||(this.removeAllListeners(),this.subscriptionMethods={});for(const s in this.requestResolvers){const n=this.requestResolvers[s];n(new Error("Manual disconnection")),delete this.requestResolvers[s]}return await this.connection.disconnect(e)}finally{i()}}async request(e,...t){if(this.connection.status!==d.CONNECTED)throw new Error(`Unable to send request to a disconnected server '${this.connection.host}'.`);this.requestId+=1;const i=this.requestId,s=w.buildRequestObject(e,t,i),n=r=>{this.requestResolvers[i]=(h,a)=>{r(h||a)},this.connection.send(s)};return o.network(`Sending request '${e}' to '${this.connection.host}'`),new Promise(n)}async subscribe(e,...t){this.subscriptionMethods[e]||(this.subscriptionMethods[e]=new Set),this.subscriptionMethods[e].add(JSON.stringify(t));const i=await this.request(e,...t),s={jsonrpc:"2.0",method:e,params:[...t,i]};this.emit("notification",s)}async unsubscribe(e,...t){if(this.connection.status!==d.CONNECTED)throw new Error(`Unable to send unsubscribe request to a disconnected server '${this.connection.host}'.`);if(!this.subscriptionMethods[e])throw new Error(`Cannot unsubscribe from '${e}' since the method has no subscriptions.`);const i=JSON.stringify(t);if(!this.subscriptionMethods[e].has(i))throw new Error(`Cannot unsubscribe from '${e}' since it has no subscription with the given parameters.`);this.subscriptionMethods[e].delete(i),await this.request(e.replace(".subscribe",".unsubscribe"),...t),o.client(`Unsubscribed from '${String(e)}' for the '${i}' parameters.`)}async resubscribeOnConnect(){o.client(`Connected to '${this.connection.hostIdentifier}'.`);const e=[];for(const t in this.subscriptionMethods){for(const i of this.subscriptionMethods[t].values()){const s=JSON.parse(i);e.push(this.subscribe(t,...s))}await Promise.all(e)}e.length>0&&o.client(`Restored ${e.length} previous subscriptions for '${this.connection.hostIdentifier}'`)}response(e){if(W(e)){o.client(`Received notification for '${e.method}' from '${this.connection.host}'`),this.emit("notification",e);return}if(e.id===null)throw new Error("Internal error: Received an RPC response with ID null.");const t=this.requestResolvers[e.id];if(!t)throw new Error("Internal error: Callback for response not available.");delete this.requestResolvers[e.id],V(e)?t(new Error(e.error.message)):t(void 0,e.result)}onConnectionDisconnect(){this.emit("disconnected");for(const e in this.requestResolvers){const t=this.requestResolvers[e];t(new Error("Connection lost")),delete this.requestResolvers[e]}}}var K=z;class H extends I.EventEmitter{constructor(e,t,i=b.CLUSTER_CONFIDENCE,s=b.CLUSTER_DISTRIBUTION,n=b.CLUSTER_ORDER,r=b.TIMEOUT,h=b.PING_INTERVAL,a=b.RECONNECT){super(),this.application=e,this.version=t,this.confidence=i,this.distribution=s,this.order=n,this.timeout=r,this.pingInterval=h,this.reconnectInterval=a,this.clients={},this.connections=0,this.notifications={},this.status=u.DISABLED,this.requestCounter=0,this.requestPromises={},this.requestLock=new R,this.responseLock=new R,o.cluster(`Initialized empty cluster (${i} of ${s||"ALL"})`),(s===C.ALL||i/s<=.5)&&o.warning(`Subscriptions might return multiple valid responses when confidence (${i}) is less than 51% of distribution.`)}async addServer(e,t=b.PORT,i=b.TRANSPORT_SCHEME,s=!0){const n=new K(this.application,this.version,e,t,i,this.timeout,this.pingInterval,this.reconnectInterval),r=`${e}:${t}`;this.clients[r]={state:m.UNAVAILABLE,connection:n};const h=()=>{const f=Math.max(this.confidence,this.distribution);this.connections>=f?this.status!==u.READY&&(this.status=u.READY,this.emit("ready"),o.cluster(`Cluster status is ready (currently ${this.connections} of ${f} connections available.)`)):this.connections>=this.confidence?this.status!==u.DEGRADED&&(this.status=u.DEGRADED,this.emit("degraded"),o.cluster(`Cluster status is degraded (only ${this.connections} of ${f} connections available.)`)):this.status!==u.DISABLED&&(this.status=u.DISABLED,this.emit("disabled"),o.cluster(`Cluster status is disabled (only ${this.connections} of the ${f} connections are available.)`))},a=async()=>{try{n.connection.status===d.CONNECTED&&(this.clients[r].state===m.UNAVAILABLE&&(this.connections+=1),this.clients[r].state=m.AVAILABLE,h())}catch{}},l=()=>{this.clients[r].state===m.AVAILABLE&&(this.connections-=1),this.clients[r].state=m.UNAVAILABLE,h()};if(n.connection.on("connect",a.bind(this)),n.connection.on("disconnect",l.bind(this)),n.on("notification",this.handleSubscriptionNotifications.bind(this,r)),s)try{await n.connect()}catch(f){o.cluster(`Failed to connect with ${e}: ${f}`)}}async request(e,...t){if(this.status===u.DISABLED)throw new Error(`Cannot request '${e}' when available clients (${this.connections}) is less than required confidence (${this.confidence}).`);const i=await this.requestLock.acquire();let s=0;try{this.requestCounter+=1,s=this.requestCounter}finally{i()}this.requestPromises[s]=[];const n=Object.keys(this.clients).filter(l=>this.clients[l].state===m.AVAILABLE);let r=0,h=this.distribution||n.length;for(this.status===u.DEGRADED&&(h=n.length);r<h;){let l=0;this.order===T.RANDOM&&(l=Math.floor(Math.random()*n.length));const[f]=n.splice(l,1),k=this.clients[f].connection.request(e,...t);this.requestPromises[s].push(k),r+=1}const a=(l,f)=>{const k=async()=>{const y={};let g=0;for(const x in this.requestPromises[s]){let D;try{const E=[this.requestPromises[s][x],Promise.resolve(void 0)];D=await Promise.race(E)}catch{g+=1;continue}if(D!==void 0){const E=JSON.stringify(D);if(g+=1,y[E]===void 0?y[E]=1:y[E]+=1,y[E]===this.confidence){o.cluster(`Validated response for '${e}' with sufficient integrity (${this.confidence}).`),l(D);return}}}if(g===this.requestPromises[s].length){f(new Error(`Unable to complete request for '${e}', response failed to reach sufficient integrity (${this.confidence}).`));return}setTimeout(k,1e3)};k()};return new Promise(a)}async subscribe(e,...t){for(const i in this.clients){const s=this.clients[i].connection;try{await s.subscribe(e,...t)}catch{}}}async unsubscribe(e,...t){const i=[];for(const s in this.clients){const n=this.clients[s].connection;i.push(n.unsubscribe(e,...t))}await Promise.all(i)}async handleSubscriptionNotifications(e,t){const i=await this.responseLock.acquire();try{const s=JSON.stringify(t);this.notifications[s]===void 0&&(this.notifications[s]=new Set),this.notifications[s].add(e),this.notifications[s].size===this.confidence&&(o.cluster(`Validated notification for '${t.method}' with sufficient integrity (${this.confidence}).`),this.emit("notification",t),setTimeout(this.dismissSubscriptionNotification.bind(this,s),this.timeout)),this.notifications[s].size===this.distribution&&this.dismissSubscriptionNotification(s)}finally{i()}}async dismissSubscriptionNotification(e){delete this.notifications[e]}async ready(){const e=Date.now(),t=i=>{const s=()=>{if(this.status===u.READY){i(!0);return}if(Date.now()-e>this.timeout){i(!1);return}setTimeout(s,50)};s()};return new Promise(t)}async startup(){o.cluster("Starting up cluster.");const e=[];for(const t in this.clients){const{host:i,port:s,scheme:n}=this.clients[t].connection.connection;this.clients[t].state===m.AVAILABLE?o.warning(`Called startup(), but server ${i}:${s} is already connected`):e.push(this.addServer(i,s,n))}return Promise.all(e)}async shutdown(e=!1){o.cluster("Shutting down cluster.");const t=[],i=s=>{this.once("disabled",()=>s(Promise.all(t)));for(const n in this.clients)t.push(this.clients[n].connection.disconnect(!0,e))};return new Promise(i)}}var Q=H;const X="data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'%20standalone='no'?%3e%3csvg%20xmlns:dc='http://purl.org/dc/elements/1.1/'%20xmlns:cc='http://creativecommons.org/ns%23'%20xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23'%20xmlns:svg='http://www.w3.org/2000/svg'%20xmlns='http://www.w3.org/2000/svg'%20height='40'%20viewBox='0%20-960%20960%20960'%20width='40'%20version='1.1'%20id='svg1584'%3e%3cmetadata%20id='metadata1590'%3e%3crdf:RDF%3e%3ccc:Work%20rdf:about=''%3e%3cdc:format%3eimage/svg+xml%3c/dc:format%3e%3cdc:type%20rdf:resource='http://purl.org/dc/dcmitype/StillImage'%20/%3e%3cdc:title%3e%3c/dc:title%3e%3c/cc:Work%3e%3c/rdf:RDF%3e%3c/metadata%3e%3cdefs%20id='defs1588'%20/%3e%3crect%20style='fill:%238dc351;fill-opacity:1;stroke:none;stroke-width:0;stroke-linecap:round;stroke-opacity:0.00392157'%20id='rect988'%20width='960'%20height='960'%20x='-1.5108347e-16'%20y='-960'%20rx='9798.04'%20ry='960'%20/%3e%3cg%20transform='matrix(0.05649551,0,0,0.05649551,34.309165,-945.515)'%20fill='%23ffffff'%20id='g56-1-2'%20style='stroke-width:0.735607'%3e%3cpath%20d='m%207751,13046%20c%20-6,-17%20-62,-222%20-127,-456%20-195,-713%20-262,-951%20-266,-956%20-3,-2%20-398,103%20-879,234%20-481,131%20-875,238%20-877,237%20-3,-3%20-112,-1041%20-112,-1071%200,-17%208,-23%2033,-28%2075,-14%20558,-147%20627,-172%20101,-38%20181,-113%20204,-193%2028,-95%2021,-155%20-43,-390%20-33,-119%20-139,-504%20-236,-856%20-97,-352%20-239,-867%20-315,-1145%20-76,-278%20-193,-703%20-260,-945%20-67,-242%20-142,-514%20-166,-605%20-25,-91%20-57,-185%20-72,-210%20-44,-77%20-110,-138%20-190,-177%20-67,-34%20-84,-38%20-171,-41%20-134,-6%20-233,16%20-734,162%20-81,23%20-120,30%20-122,22%20-7,-20%20-247,-901%20-249,-910%200,-4%2087,-33%20194,-62%20107,-30%20499,-138%20870,-241%20371,-102%20678,-189%20682,-192%204,-3%20-81,-323%20-188,-711%20-107,-388%20-192,-710%20-190,-715%202,-6%2028,-17%2057,-24%2030,-8%20222,-61%20428,-117%20206,-57%20376,-103%20377,-101%201,1%2088,315%20193,697%20106,382%20194,696%20196,698%202,2%20137,-35%20302,-83%20164,-48%20318,-92%20343,-100%2035,-10%2044,-17%2042,-31%20-2,-11%20-87,-320%20-188,-689%20-101,-368%20-184,-674%20-184,-680%200,-9%20858,-250%20865,-243%202,2%2091,322%20198,711%20107,389%20196,710%20199,712%202,3%2042,-2%2089,-10%20416,-74%20899,-94%201184,-51%20672,104%201078,440%201283,1061%20196,592%2097,1085%20-302,1499%20l%20-73,76%20h%20118%20c%20828,0%201344,393%201564,1190%20130,470%20135,910%2015,1273%20-41,126%20-137,313%20-218,427%20-145,205%20-419,444%20-699,612%20-277,166%20-754,378%20-1083,483%20-30,10%20-58,20%20-62,24%20-4,3%2071,290%20166,636%2096,347%20185,671%20198,721%20l%2025,91%20-426,117%20c%20-234,64%20-431,116%20-436,116%20-6,0%20-98,-318%20-204,-707%20-107,-390%20-195,-709%20-196,-710%20-1,-2%20-143,35%20-316,81%20-173,46%20-329,87%20-346,91%20-18,3%20-33,12%20-33,18%200,11%2016,68%20259,952%2071,259%20128,471%20126,473%20-1,1%20-196,56%20-433,121%20l%20-431,118%20z%20m%20442,-2762%20c%20928,-243%201429,-470%201733,-785%2093,-98%20132,-151%20179,-252%2054,-113%2070,-186%2069,-317%200,-211%20-79,-419%20-214,-563%20-317,-339%20-883,-384%20-1824,-143%20-226,58%20-696,197%20-696,207%200,4%20117,433%20260,953%20143,520%20260,948%20260,951%200,10%2022,5%20233,-51%20z%20M%207391,7495%20c%20657,-172%201015,-321%201295,-540%2097,-76%20161,-145%20225,-243%2060,-91%2087,-161%20107,-277%2019,-113%207,-234%20-39,-369%20-102,-305%20-310,-473%20-660,-532%20-82,-13%20-140,-16%20-298,-11%20-227,6%20-400,32%20-681,103%20-171,42%20-609,170%20-618,179%20-4,4%20126,484%20431,1588%2024,87%2046,147%2053,147%206,0%2090,-20%20185,-45%20z'%20fill='%23ffffff'%20id='path54-2-8'%20style='stroke-width:0.541117'%20/%3e%3c/g%3e%3c/svg%3e";export{Q as $,Y as C,T as a,p as b,j as c,X as d};
//# sourceMappingURL=bch.1-C-_X8e.js.map
