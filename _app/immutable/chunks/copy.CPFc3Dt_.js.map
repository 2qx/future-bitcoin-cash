{"version":3,"file":"copy.CPFc3Dt_.js","sources":["../../../../../../../../node_modules/.pnpm/svelte-copy@1.4.2_svelte@4.2.18/node_modules/svelte-copy/dist/copy.js"],"sourcesContent":["export async function copyText(text) {\n    if ('clipboard' in navigator) {\n        await navigator.clipboard.writeText(text);\n    }\n    else {\n        /**\n         * This is the fallback deprecated way of copying text to the clipboard. Only runs if it can't find the clipboard API.\n         */\n        const element = document.createElement('input');\n        element.type = 'text';\n        element.disabled = true;\n        element.style.setProperty('position', 'fixed');\n        element.style.setProperty('z-index', '-100');\n        element.style.setProperty('pointer-events', 'none');\n        element.style.setProperty('opacity', '0');\n        element.value = text;\n        document.body.appendChild(element);\n        element.click();\n        element.select();\n        document.execCommand('copy');\n        document.body.removeChild(element);\n    }\n}\nexport const copy = (element, params) => {\n    async function handle() {\n        if (text)\n            try {\n                await copyText(text);\n                element.dispatchEvent(new CustomEvent('svelte-copy', { detail: text }));\n            }\n            catch (e) {\n                element.dispatchEvent(new CustomEvent('svelte-copy:error', { detail: e }));\n            }\n    }\n    let events = typeof params == 'string' ? ['click'] : [params.events].flat(1);\n    let text = typeof params == 'string' ? params : params.text;\n    events.forEach((event) => {\n        element.addEventListener(event, handle, true);\n    });\n    return {\n        update: (newParams) => {\n            const newEvents = typeof newParams == 'string'\n                ? ['click']\n                : [newParams.events].flat(1);\n            const newText = typeof newParams == 'string' ? newParams : newParams.text;\n            const addedEvents = newEvents.filter((x) => !events.includes(x));\n            const removedEvents = events.filter((x) => !newEvents.includes(x));\n            addedEvents.forEach((event) => {\n                element.addEventListener(event, handle, true);\n            });\n            removedEvents.forEach((event) => {\n                element.removeEventListener(event, handle, true);\n            });\n            events = newEvents;\n            text = newText;\n        },\n        destroy: () => {\n            events.forEach((event) => {\n                element.removeEventListener(event, handle, true);\n            });\n        },\n    };\n};\n"],"names":["copyText","text","element","copy","params","handle","events","event","newParams","newEvents","newText","addedEvents","x","removedEvents"],"mappings":"AAAO,eAAeA,EAASC,EAAM,CACjC,GAAI,cAAe,UACf,MAAM,UAAU,UAAU,UAAUA,CAAI,MAEvC,CAID,MAAMC,EAAU,SAAS,cAAc,OAAO,EAC9CA,EAAQ,KAAO,OACfA,EAAQ,SAAW,GACnBA,EAAQ,MAAM,YAAY,WAAY,OAAO,EAC7CA,EAAQ,MAAM,YAAY,UAAW,MAAM,EAC3CA,EAAQ,MAAM,YAAY,iBAAkB,MAAM,EAClDA,EAAQ,MAAM,YAAY,UAAW,GAAG,EACxCA,EAAQ,MAAQD,EAChB,SAAS,KAAK,YAAYC,CAAO,EACjCA,EAAQ,MAAK,EACbA,EAAQ,OAAM,EACd,SAAS,YAAY,MAAM,EAC3B,SAAS,KAAK,YAAYA,CAAO,CACpC,CACL,CACY,MAACC,EAAO,CAACD,EAASE,IAAW,CACrC,eAAeC,GAAS,CACpB,GAAIJ,EACA,GAAI,CACA,MAAMD,EAASC,CAAI,EACnBC,EAAQ,cAAc,IAAI,YAAY,cAAe,CAAE,OAAQD,CAAM,CAAA,CAAC,CACzE,OACM,EAAG,CACNC,EAAQ,cAAc,IAAI,YAAY,oBAAqB,CAAE,OAAQ,CAAG,CAAA,CAAC,CAC5E,CACR,CACD,IAAII,EAAS,OAAOF,GAAU,SAAW,CAAC,OAAO,EAAI,CAACA,EAAO,MAAM,EAAE,KAAK,CAAC,EACvEH,EAAO,OAAOG,GAAU,SAAWA,EAASA,EAAO,KACvD,OAAAE,EAAO,QAASC,GAAU,CACtBL,EAAQ,iBAAiBK,EAAOF,EAAQ,EAAI,CACpD,CAAK,EACM,CACH,OAASG,GAAc,CACnB,MAAMC,EAAY,OAAOD,GAAa,SAChC,CAAC,OAAO,EACR,CAACA,EAAU,MAAM,EAAE,KAAK,CAAC,EACzBE,EAAU,OAAOF,GAAa,SAAWA,EAAYA,EAAU,KAC/DG,EAAcF,EAAU,OAAQG,GAAM,CAACN,EAAO,SAASM,CAAC,CAAC,EACzDC,EAAgBP,EAAO,OAAQM,GAAM,CAACH,EAAU,SAASG,CAAC,CAAC,EACjED,EAAY,QAASJ,GAAU,CAC3BL,EAAQ,iBAAiBK,EAAOF,EAAQ,EAAI,CAC5D,CAAa,EACDQ,EAAc,QAASN,GAAU,CAC7BL,EAAQ,oBAAoBK,EAAOF,EAAQ,EAAI,CAC/D,CAAa,EACDC,EAASG,EACTR,EAAOS,CACV,EACD,QAAS,IAAM,CACXJ,EAAO,QAASC,GAAU,CACtBL,EAAQ,oBAAoBK,EAAOF,EAAQ,EAAI,CAC/D,CAAa,CACJ,CACT,CACA","x_google_ignoreList":[0]}